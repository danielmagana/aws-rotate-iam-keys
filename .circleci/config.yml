version: 2.1

# Set up the environment variables
# update the website
# make the homebrew zip folder
# make the changelog
# make the debian file
# update the readme
# pull the checksum version
# push the new checksum to the repo master branch

orbs:
  aws-cli: airswap/aws-cli@volatile

references:
  container_config: &container_config
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/repo

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  setup_disclaimer: &setup_disclaimer
    run:
      name: set up repo
      command: |
        echo "export TEMPLATE_DISCLAIMER='This is an auto-generated file. Please make changes to the file with .template. in the name.'" >> $BASH_ENV

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - checkout:
          path: ~/repo
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  change_website:
    <<: *container_config
    steps:
      - *restore_repo
      - aws-cli/install
      - run:
          name: Change the website
          command: |
            # version swap the website
            VERSION=$(head -1 $(pwd)/VERSION)
            sudo apt-get -y install gettext-base
            envsubst < website/index.template.html > website/index.html
            aws s3 sync ./website s3://aws-rotate-iam-keys.com --delete
            aws s3 cp ./Windows/aws-rotate-iam-keys.ps1 s3://aws-rotate-iam-keys.com/aws-rotate-iam-keys.ps1

  build:
    <<: *container_config
    steps:
      - *restore_repo
      - aws-cli/install
      - add_ssh_keys
      - *setup_disclaimer
      - run:
          name: Build the .deb package
          command: |
            export VERSION=$(head -1 $(pwd)/VERSION)
            sudo apt-get -y install gettext-base
            # make the dist folder
            mkdir -p dist
            # copy in the src and swap the versions
            cp -r src/** dist/
            sed "s/<%VERSION%>/$VERSION/g" src/bin/aws-rotate-iam-keys > dist/bin/aws-rotate-iam-keys

            CHANGES="aws-rotate-iam-keys_${VERSION}_source.changes"

            zip -r aws-rotate-iam-keys_${VERSION}.zip dist

            # make the changelog
            cd dist
            sudo apt-get update
            sudo apt-get -y install devscripts build-essential dh-make debhelper
            DEBEMAIL="Adam Link <aws-rotate-iam-keys@rhyeal.com>" DEBFULLNAME="Adam Link" dch -v $VERSION --distribution bionic --force-distribution "See release notes on GitHub"

            mv debian DEBIAN
            envsubst < DEBIAN/control-debian > DEBIAN/control

            # make the Debian .deb
            dpkg-deb --build . ../aws-rotate-iam-keys.${VERSION}.deb

            rm DEBIAN/control
            mv DEBIAN debian
            envsubst < debian/control-ubuntu > debian/control

            # make unsigned changes
            DEBEMAIL="Adam Link <aws-rotate-iam-keys@rhyeal.com>" DEBFULLNAME="Adam Link" debuild -S -sa -us -uc

            # let's grab that signing key now
            aws s3 cp s3://rhyeal-ppa-signing-keys/my_secret_signing_key.asc ~/my_secret_signing_key.asc
            gpg --import ~/my_secret_signing_key.asc
            cd ..
            debsign -k 008A79BDFBCF3348 ${CHANGES}
      - persist_to_workspace:
            root: ~/repo
            paths: .
  release:
    <<: *container_config
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-cli/install
      - add_ssh_keys
      - run:
          name: add ssh key to known hosts
          command: mkdir -p ~/.ssh/ && ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - *setup_disclaimer
      - run:
          name: Release the .deb package
          command: |
            # let's grab that signing key now
            aws s3 cp s3://rhyeal-ppa-signing-keys/my_secret_signing_key.asc ~/my_secret_signing_key.asc
            gpg --import ~/my_secret_signing_key.asc

            export VERSION=$(head -1 $(pwd)/VERSION)
            CHANGES="aws-rotate-iam-keys_${VERSION}_source.changes"
            sudo apt-get -y install devscripts build-essential dh-make debhelper
            dput ppa:rhyeal/aws-rotate-iam-keys $CHANGES
            cp dist/debian/changelog src/debian/changelog
            rm -rf dist

            # put the .zip, the .tar.gz, the .deb, and the README.md back to GH
            git add *${VERSION}.deb
            git add *${VERSION}.zip
            git add *${VERSION}.tar.gz
            git add src/debian/changelog

            # [ci skip] to message
            git commit -m "[ci skip] adding built files from CI server"

            git push --set-upstream origin ${CIRCLE_BRANCH}
      - persist_to_workspace:
            root: ~/repo
            paths: .
  tag_release:
    <<: *container_config
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-cli/install
      - add_ssh_keys
      - *setup_disclaimer
      - run:
          name: add ssh key to known hosts
          command: mkdir -p ~/.ssh/ && ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: Tag new release
          command: |
            export VERSION=$(head -1 $(pwd)/VERSION)
            #git tag -a v${VERSION} -m "Version ${VERSION}"
            #git push origin v${VERSION}

            # h/t https://github.com/github/hub/issues/718#issuecomment-400430284
            HUB_DIST=linux-amd64 HUB_VERSION=`curl -w "%{url_effective}\n" -I -L -s -S github.com/github/hub/releases/latest -o /dev/null | awk -F'releases/tag/v' '{ print $2 }'`; curl "https://github.com/github/hub/releases/download/v$HUB_VERSION/hub-$HUB_DIST-$HUB_VERSION.tgz" -L | tar xvz && sudo ./hub-$HUB_DIST-$HUB_VERSION/install && rm -r ./hub-$HUB_DIST-$HUB_VERSION

            hub release create -m "Version ${VERSION}" v${VERSION}
      - persist_to_workspace:
            root: ~/repo
            paths: .
  homebrew:
    <<: *container_config
    steps:
      - attach_workspace:
          at: ~/repo
      - aws-cli/install
      - add_ssh_keys
      - *setup_disclaimer
      - run:
          name: add ssh key to known hosts
          command: mkdir -p ~/.ssh/ && ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run:
          name: Update Homebrew Formula
          command: |
            sudo apt-get -y install gettext-base
            export VERSION=$(head -1 $(pwd)/VERSION)
            export HOMEBREW_URL="https://github.com/rhyeal/aws-rotate-iam-keys/archive/v${VERSION}.tar.gz"
            sleep 5s # make sure the URL is there

            wget $HOMEBREW_URL -O aws-rotate-iam-keys-${VERSION}.tar.gz
            export HOMEBREW_SHA="$(sha256sum aws-rotate-iam-keys-${VERSION}.tar.gz | cut -d ' ' -f 1)"

            # update homebrew SHA in Formula file
            envsubst  < aws-rotate-iam-keys.template.rb | sed -e 's/ยง/$/g' > Formula/aws-rotate-iam-keys.rb # change up the ยง for a $ in the $line line

            # update the readme
            export WIN_MD5=$(md5sum Windows/aws-rotate-iam-keys.ps1)
            export LINUX_MD5=$(md5sum aws-rotate-iam-keys.${VERSION}.deb | cut -c 1-32)
            envsubst < README.template.md > README.md

            git add README.md
            git add Formula/aws-rotate-iam-keys.rb

            git commit -m "[ci skip] Update Homebrew file and hashes"

            git push --set-upstream origin ${CIRCLE_BRANCH}

workflows:
  build_and_deploy:
    jobs:
      - checkout_code
      - build:
          context: Personal_AWS
          requires:
            - checkout_code
      - release:
          context: Personal_AWS
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - tag_release:
          context: Personal_AWS
          requires:
            - release
          filters:
            branches:
              only:
                - master
      - homebrew:
          context: Personal_AWS
          requires:
            - tag_release
          filters:
            branches:
              only:
                - master
      - change_website:
          context: Personal_AWS
          requires:
            - homebrew
          filters:
            branches:
              only:
                - master
